@startuml
left to right direction

class clientSide/views.PlaylistPageOpen {
~ Scanner in
+ <<Create>> PlaylistPageOpen(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
}


class clientSide/views.HomePage {
+ <<Create>> HomePage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button0()
+ void button1()
+ void button2()
+ void button3()
+ void button9()
}

abstract class clientSide/views.TemplateInversePage {
+ <<Create>> TemplateInversePage(PageService,IPlaylistPlayer)
+ void displayAllPage()
}

class clientSide.services.ToolBoxView {
~ PlaylistServices playlistServ
~ SongService songServ
~ SearchService searchServ
~ UserService userServ
~ PrintService printServ
~ PasswordGenerator passwordServ
~ ArtistService artistServ
~ UniqueIdService uniqueIdServ
+ <<Create>> ToolBoxView(PlaylistServices,UserService,SongService,ArtistService,
PrintService,SearchService,PasswordGenerator,UniqueIdService)
+ PlaylistServices getPlaylistServ()
+ SearchService getSearchServ()
+ UserService getUserServ()
+ PrintService getPrintServ()
+ SongService getSongServ()
+ ArtistService getArtistServ()
+ PasswordGenerator getPasswordServ()
}


class clientSide/views.FriendOptions {
+ <<Create>> FriendOptions(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
}

class clientSide/views.FriendsDisplayFriends {
+ <<Create>> FriendsDisplayFriends(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void validateInput()
}

class "clientSide.services.PageService" {
~ ArrayList<InterfaceMenu> pages
- Scanner scanner
- Stack<Integer> menuPagesStack
- IPlaylistPlayer spotifyPlayer
+ Login login
+ CreateAccount createAccount
+ HomePage homePage
+ PlaylistHomePage playlistHomePage
+ PlaylistChoseList playlistChoseList
+ PlaylistPageShared playlistPageShared
+ PlaylistPageOpen playlistPageOpen
+ PlaylistCreation playlistCreation
+ PlaylistDeletion playlistDeletion
+ Search search
+ ActionFoundedSongs actionFoundedSongs
+ SearchGender searchGender
+ FriendsPlaylistPage friendsPlaylistPage
+ FriendsDisplayFriends friendsDisplayFriends
+ FriendsHomePage friendsHomePage
+ FriendSearch friendSearch
+ FriendPlaylists friendPlaylists
+ FriendOptions friendOptions
+ SongPlayer songPlayer
- UserService userService
- ToolBoxView toolBoxView
+ <<Create>> PageService(IPlaylistPlayer,ToolBoxView,UserService,Stack<Integer>)
- void setUpPages()
+ void startLogin()
+ String gotAnInputGoBackIf0(String)
+ int tryParseInt(String)
+ Stack<Integer> getMenuPages()
+ void addToStack(int)
+ void goBack(int)
+ InterfaceMenu getPageById(int)
+ void pageIsPremium(boolean)
}


interface clientSide/views.InterfaceMenu {
~ void displayAllPage()
~ int getPageId()
~ void displayTitle(String)
~ void displayContent(String)
~ void displaySpecificContent()
~ void validateInput()
~ void switchPage()
~ void button0()
~ void button1()
~ void button2()
~ void button3()
~ void button4()
~ void button5()
~ void button6()
~ void button7()
~ void button8()
~ void button9()
}

class clientSide/views.PlaylistCreation {
- String playlistName
+ <<Create>> PlaylistCreation(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
- void playlistNameVerification()
}

abstract class clientSide/views.TemplateSimplePage {
~ int index
+ String pageTitle
+ int pageId
+ String pageContent
+ IPlaylistPlayer spotifyPlayer
~ PageService pageService
~ Scanner scanner
~ boolean isFree
+ ToolBoxView toolBoxView
# MenuService icon
+ <<Create>> TemplateSimplePage(PageService,IPlaylistPlayer)
+ void displayAllPage()
+ int getPageId()
+ void displayTitle(String)
+ void displayContent(String)
+ void displaySpecificContent()
+ void validateInput()
+ void switchPage()
+ void handelInvalidIndex()
+ void button0()
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
+ void button6()
+ void button7()
+ void button8()
+ void button9()
}


class clientSide/views.CreateAccount {
- String pseudonym
- String password
- String email
- PlanEnum planEnum
+ <<Create>> CreateAccount(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
- void createAccount()
}


class clientSide/views.PlaylistDeletion {
+ <<Create>> PlaylistDeletion(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
}

class clientSide/views.ActionFoundedSongs {
+ <<Create>> ActionFoundedSongs(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
- void verificationAndThenAction()
+ void button3()
+ void button8()
+ void handelInvalidIndex()
}

class clientSide/views.PlaylistHomePage {
+ <<Create>> PlaylistHomePage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
}

class clientSide/views.FriendSearch {
+ <<Create>> FriendSearch(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
}

class clientSide/views.Login {
+ <<Create>> Login(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button0()
+ void button1()
+ void button2()
}
class "clientSide.services.PrintHelper" << (S, #FF7700) static >> {
    ~ {static} String b0
    ~ {static} String b1
    ~ {static} String b2
    ~ {static} String b3
    ~ {static} String b4
    ~ {static} String b5
    ~ {static} String b6
    ~ {static} String b7
    ~ {static} String b8
    ~ {static} String b9
    ~ {static} String playPause
    ~ {static} String playBack
    ~ {static} String next
    ~ {static} String previous
    ~ {static} String shuffle
    ~ {static} String sequential
    ~ {static} String repeatOne
    ~ {static} String lock
    ~ {static} String premium
    ~ {static} String free
    ~ {static} String group
    ~ {static} String house
    ~ {static} String earth
    ~ {static} String search
    ~ {static} String lineBreak
    ~ {static} String eightMusicPlayer
    ~ {static} String nineHomepage
    ~ {static} String zeroBack
    ~ {static} String separator
    ~ {static} String backHomePageMusicPlayer
    ~ {static} String PRINT_RESET
    ~ {static} String PRINT_BLACK
    ~ {static} String PRINT_RED
    ~ {static} String PRINT_GREEN
    ~ {static} String PRINT_YELLOW
    ~ {static} String PRINT_BLUE
    ~ {static} String PRINT_WHITE
    ~ {static} String PRINT_GREY
    ~ {static} String PRINT_BG_WHITE
    ~ {static} String PRINT_BOLD

    + {static} void printLN()
    + {static} void printLNBgWhite(String)
    + {static} void printLNWhite(String)
    + {static} void printLNBlue(String)
    + {static} void printLNGreen(String)
    + {static} void printLNGrey(String)
    + {static} void printLNInfo(String)
    + {static} void printInvalidInputTryAgain()
    + {static} void printYourInput()
    + {static} void printInvalidInputTryAgainOrBack()
    + {static} void printInvalidInput()
    + {static} void printLNError(String)
    + {static} void printWhite(String)
    + {static} void printInfo(String)
}


class clientSide/views.Search {
+ <<Create>> Search(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
+ void button3()
+ void button4()
}

class clientSide/views.SearchGender {
+ <<Create>> SearchGender(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
+ void button6()
+ void button7()
+ void button8()
}

class clientSide/views.FriendsPlaylistPage {
+ <<Create>> FriendsPlaylistPage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
}

class clientSide/views.PlaylistPageShared {
+ <<Create>> PlaylistPageShared(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
}

class clientSide/views.SongPlayer {
+ <<Create>> SongPlayer(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
+ void button8()
~ void loop()
}

class clientSide/views.FriendsHomePage {
+ <<Create>> FriendsHomePage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
}


class clientSide/views.PlaylistChoseList {
+ <<Create>> PlaylistChoseList(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void validateInput()
+ void button8()
+ void button9()
}

class clientSide/views.FriendPlaylists {
+ <<Create>> FriendPlaylists(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void validateInput()
}

interface "clientSide.player/playlist_player.IPlaylistPlayer" {
~ void playOrPause(int)
~ void play(int,int)
~ void playback()
~ void next()
~ void previous()
~ void setShuffleMode()
~ void setRepeatMode()
~ void setSequentialMode()
~ int getCurrentPlaylistId()
~ int getCurrentSongId()
~ void stop()
~ boolean isPlaying()
~ boolean isPaused()
~ String getCurrentState()
~ void setCurrentSong(Song)
}

'interfaces !'
'--- Dépendances vers clientSide/views.InterfaceMenu ---
"clientSide/views.TemplateSimplePage" .r.|> "clientSide/views.InterfaceMenu"

'--- Dépendances vers clientSide/views.TemplateSimplePage ---
"clientSide/views.TemplateInversePage" -r-|> "clientSide/views.TemplateSimplePage"

"clientSide/views.PlaylistPageOpen" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.HomePage" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.FriendOptions" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.FriendsDisplayFriends" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.PlaylistDeletion" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.ActionFoundedSongs" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.PlaylistHomePage" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.FriendSearch" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.Login" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.Search" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.SearchGender" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.FriendsPlaylistPage" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.PlaylistPageShared" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.SongPlayer" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.FriendsHomePage" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.PlaylistChoseList" -u-|> "clientSide/views.TemplateSimplePage"
"clientSide/views.FriendPlaylists" -u-|> "clientSide/views.TemplateSimplePage"

'--- Dépendances vers clientSide/views.TemplateInversePage ---
"clientSide/views.PlaylistCreation" -r-|> "clientSide/views.TemplateInversePage"
"clientSide/views.CreateAccount" -r-|> "clientSide/views.TemplateInversePage"


"clientSide/views" -u-> "clientSide" : used by all classes and abstract of package

"clientSide.services.PrintHelper" -[hidden]r-> "clientSide.services.PageService"

@enduml