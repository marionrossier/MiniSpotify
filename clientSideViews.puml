@startuml
class clientSide.views.PlaylistPageOpen {
~ Scanner in
+ <<Create>> PlaylistPageOpen(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
}


class clientSide.views.HomePage {
+ <<Create>> HomePage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button0()
+ void button1()
+ void button2()
+ void button3()
+ void button9()
}

abstract class clientSide.views.TemplateInversePage {
+ <<Create>> TemplateInversePage(PageService,IPlaylistPlayer)
+ void displayAllPage()
}

class clientSide.services.ToolBoxView {
~ PlaylistServices playlistServ
~ SongService songServ
~ SearchService searchServ
~ UserService userServ
~ PrintService printServ
~ PasswordService passwordServ
~ PlaylistReorderSongService playlistReorderSongServ
~ ArtistService artistServ
~ TemporaryPlaylistService temporaryPlaylistService
~ UniqueIdService uniqueIdServ
+ <<Create>> ToolBoxView(PlaylistServices,UserService,SongService,ArtistService,PrintService,SearchService,PasswordService,PlaylistReorderSongService,TemporaryPlaylistService,UniqueIdService)
+ PlaylistServices getPlaylistServ()
+ SearchService getSearchServ()
+ UserService getUserServ()
+ PrintService getPrintServ()
+ PlaylistReorderSongService getPlaylistReorderSongServ()
+ SongService getSongServ()
+ ArtistService getArtistServ()
+ PasswordService getPasswordServ()
}


class clientSide.services.PrintService {
- MenuService icon
- UserService userService
- PlaylistServices playlistService
- SongService songService
- ArtistService artistService
+ <<Create>> PrintService(SongService,ArtistService,PlaylistServices,UserService)
+ void printSongFound(List<Integer>,String)
+ void printSongList(List<Integer>)
+ void printPlaylist(List<Integer>)
+ void printUserPlaylists(int)
- String printPlaylistStatus(PlaylistEnum)
+ boolean printUserFriends(int)
+ void printUsers(List<Integer>)
+ void printUserPublicPlaylists(int)
}


class clientSide.services.SearchService {
~ Scanner scanner
- MenuService icon
- SongService songService
- PrintService printService
- UserService userService
+ <<Create>> SearchService(SongService,PrintService,UserService)
+ void searchSong(String,String,int,PageService,PlaylistServices)
+ LinkedList<Integer> searchByTitle(String)
- LinkedList<Integer> searchByArtist(String)
- LinkedList<Integer> searchByGender(MusicGender)
- LinkedList<Integer> listSongToListInt(LinkedList<Song>)
+ LinkedList<Integer> chooseFoundedSongs(List<Integer>,PageService)
+ LinkedList<Integer> chooseFoundedPlaylist(List<Integer>,PageService)
- void loopIntInputValidation(PageService,LinkedList<Integer>,int)
+ List<Integer> searchUserByPseudonym(String)
}

class clientSide.views.FriendOptions {
+ <<Create>> FriendOptions(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
}

class clientSide.views.FriendsDisplayFriends {
+ <<Create>> FriendsDisplayFriends(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void validateInput()
}

class clientSide.services.PasswordService {
- IUserRepository userRepository
+ <<Create>> PasswordService(IUserRepository)
+ byte[] generateSalt()
+ String hashPassword(String,byte[])
+ boolean verifyUserAuthentification(String,String)
+ boolean passwordCheck(String,String)
}

class clientSide.services.PageService {
~ ArrayList<InterfaceMenu> pages
- Scanner scanner
- Stack<Integer> menuPagesStack
- IPlaylistPlayer spotifyPlayer
+ Login login
+ CreateAccount createAccount
+ HomePage homePage
+ PlaylistHomePage playlistHomePage
+ PlaylistChoseList playlistChoseList
+ PlaylistPageShared playlistPageShared
+ PlaylistPageOpen playlistPageOpen
+ PlaylistCreation playlistCreation
+ PlaylistDeletion playlistDeletion
+ Search search
+ ActionFoundedSongs actionFoundedSongs
+ SearchGender searchGender
+ FriendsPlaylistPage friendsPlaylistPage
+ FriendsDisplayFriends friendsDisplayFriends
+ FriendsHomePage friendsHomePage
+ FriendSearch friendSearch
+ FriendPlaylists friendPlaylists
+ FriendOptions friendOptions
+ SongPlayer songPlayer
- UserService userService
- ToolBoxView toolBoxView
+ <<Create>> PageService(IPlaylistPlayer,ToolBoxView,UserService,Stack<Integer>)
- void setUpPages()
+ void startLogin()
+ String gotAnInputGoBackIf0(String)
+ int tryParseInt(String)
+ Stack<Integer> getMenuPages()
+ void addToStack(int)
+ void goBack(int)
+ InterfaceMenu getPageById(int)
+ void pageIsPremium(boolean)
}


interface clientSide.views.InterfaceMenu {
~ void displayAllPage()
~ int getPageId()
~ void displayTitle(String)
~ void displayContent(String)
~ void displaySpecificContent()
~ void validateInput()
~ void switchPage()
~ void button0()
~ void button1()
~ void button2()
~ void button3()
~ void button4()
~ void button5()
~ void button6()
~ void button7()
~ void button8()
~ void button9()
}

class clientSide.views.PlaylistCreation {
- String playlistName
+ <<Create>> PlaylistCreation(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
- void playlistNameVerification()
}

abstract class clientSide.views.TemplateSimplePage {
~ int index
+ String pageTitle
+ int pageId
+ String pageContent
+ IPlaylistPlayer spotifyPlayer
~ PageService pageService
~ Scanner scanner
~ boolean isFree
+ ToolBoxView toolBoxView
# MenuService icon
+ <<Create>> TemplateSimplePage(PageService,IPlaylistPlayer)
+ void displayAllPage()
+ int getPageId()
+ void displayTitle(String)
+ void displayContent(String)
+ void displaySpecificContent()
+ void validateInput()
+ void switchPage()
+ void handelInvalidIndex()
+ void button0()
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
+ void button6()
+ void button7()
+ void button8()
+ void button9()
}


class clientSide.views.CreateAccount {
- String pseudonym
- String password
- String email
- PlanEnum planEnum
+ <<Create>> CreateAccount(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
- void createAccount()
}


class clientSide.views.PlaylistDeletion {
+ <<Create>> PlaylistDeletion(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
}

class clientSide.views.ActionFoundedSongs {
+ <<Create>> ActionFoundedSongs(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
- void verificationAndThenAction()
+ void button3()
+ void button8()
+ void handelInvalidIndex()
}

class clientSide.views.PlaylistHomePage {
+ <<Create>> PlaylistHomePage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
}

class clientSide.services.MenuService {
+ String lineBreak
+ String eightMusicPlayer
+ String nineHomepage
+ String zeroBack
+ String separator
+ String backHomePageMusicPlayer
+ String nbr0()
+ String nbr1()
+ String nbr2()
+ String nbr3()
+ String nbr4()
+ String nbr5()
+ String nbr6()
+ String nbr7()
+ String nbr8()
+ String nbr9()
+ String playPause()
+ String playBack()
+ String next()
+ String previous()
+ String shuffle()
+ String sequential()
+ String repeatOne()
+ String ok()
+ String warning()
+ String lock()
+ String premium()
+ String free()
+ String group()
+ String house()
+ String earth()
+ String search()
}


class clientSide.services.SongService {
- ISongRepository songRepository
+ <<Create>> SongService(ToolBoxService)
+ void setCurrentSongId(int)
+ int getCurrentSongId()
+ Song getSongById(int)
+ LinkedList<Song> getSongByTitle(String)
+ LinkedList<Song> getSongsByArtist(String)
+ LinkedList<Song> getSongsByGender(MusicGender)
}

class clientSide.views.FriendSearch {
+ <<Create>> FriendSearch(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
}


class clientSide.services.PlaylistServices {
- IPlaylistRepository playlistRepository
- TemporaryPlaylistService temporaryPlaylistService
- PlaylistFunctionalitiesService playlistFuncService
- ISongRepository songRepository
+ <<Create>> PlaylistServices(ToolBoxService,PlaylistFunctionalitiesService,TemporaryPlaylistService)
+ int setDurationSeconds(int)
+ void setCurrentPlaylistId(int)
+ int getCurrentPlaylistId()
+ PlaylistEnum getPlaylistStatus()
+ int getAllSongsPlaylistId()
+ Playlist getPlaylistByName(String)
+ Playlist getPlaylistById(int)
+ List<Integer> getPublicPlaylists()
+ List<Integer> getUserPublicPlaylists(User)
+ int getCurrentFriendPlaylistId()
+ void setCurrentFriendPlaylistId(int)
+ void createNewPlaylist(String,PlaylistEnum)
+ void createAllSongPlaylist(User)
+ void deletePlaylist(int)
+ void renamePlayList(int,String)
+ boolean verifyPlaylistName(String,User)
+ void deleteSongFromPlaylist(int,int)
+ boolean isCurrentUserOwnerOfPlaylist(int)
+ int takeAndValidateInputChoice(int,PageService)
+ void playlistPageRouter(int,PageService)
+ int getTemporaryPlaylistId()
+ void createTemporaryPlaylist(LinkedList<Integer>,PlaylistEnum)
+ void adjustTemporaryPlaylistToNewPlaylist(String,PlaylistEnum)
+ void addSongToPlaylistFromTemporaryPlaylist(int,int)
+ void getAndAddSelectionOfPlaylistsToCurrentUserPlaylists(List<Integer>,LinkedList<Integer>,ToolBoxView)
}


class clientSide.views.Login {
+ <<Create>> Login(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button0()
+ void button1()
+ void button2()
}
class clientSide.services.PrintHelper << (S, #FF7700) static >> {
    ~ {static} String PRINT_RESET
    ~ {static} String PRINT_BLACK
    ~ {static} String PRINT_RED
    ~ {static} String PRINT_GREEN
    ~ {static} String PRINT_YELLOW
    ~ {static} String PRINT_BLUE
    ~ {static} String PRINT_WHITE
    ~ {static} String PRINT_GREY
    ~ {static} String PRINT_BG_WHITE
    ~ {static} String PRINT_BOLD

    + {static} void printLN()
    + {static} void printLNBgWhite(String)
    + {static} void printLNWhite(String)
    + {static} void printLNBlue(String)
    + {static} void printLNGreen(String)
    + {static} void printLNGrey(String)
    + {static} void printLNInfo(String)
    + {static} void printInvalidInputTryAgain()
    + {static} void printYourInput()
    + {static} void printInvalidInputTryAgainOrBack()
    + {static} void printInvalidInput()
    + {static} void printLNError(String)
    + {static} void printWhite(String)
    + {static} void printInfo(String)
}


class clientSide.views.Search {
+ <<Create>> Search(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
+ void button3()
+ void button4()
}

class clientSide.views.SearchGender {
+ <<Create>> SearchGender(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
+ void button6()
+ void button7()
+ void button8()
}

class clientSide.views.FriendsPlaylistPage {
+ <<Create>> FriendsPlaylistPage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
}

class clientSide.services.PlaylistReorderSongService {
- Scanner scanner
- IPlaylistRepository playlistRepository
+ <<Create>> PlaylistReorderSongService(ToolBoxService,Scanner)
+ void reorderSongsInPlaylist(int,PlaylistServices)
- LinkedList<Integer> collectNewOrderFromUser(Playlist)
- boolean isValidIndex(int,Playlist)
- void completeWithRemainingSongs(Playlist,List<Integer>)
}


class clientSide.services.ArtistService {
- IArtistRepository artistRepository
+ <<Create>> ArtistService(ToolBoxService)
+ String getArtistNameBySong(int)
}


class clientSide.services.UserService {
- IUserRepository userRepository
- PasswordService passwordService
+ <<Create>> UserService(ToolBoxService,PasswordService)
+ void addUser(String,String,String,PlanEnum)
+ void addUser(int,String,String,String,PlanEnum)
+ boolean emailValidation(String)
+ void addOnePlaylistToCurrentUser(int)
+ void addFriend(int)
+ void deleteFriend(int)
+ void saveUser(User)
+ int getCurrentUserId()
+ void resetCookie()
+ User getUserByPseudonym(String)
+ List<Integer> getUsersByPseudonym(String)
+ User getUserById(int)
+ void setCurrentFriendId(int)
+ int getCurrentFriendId()
}

class clientSide.services.TemporaryPlaylistService {
- IPlaylistRepository playlistRepository
- UserService userService
+ <<Create>> TemporaryPlaylistService(ToolBoxService,UserService)
+ int getTemporaryPlaylistId()
+ void createTemporaryPlaylist(LinkedList<Integer>,PlaylistEnum)
+ void adjustTemporaryPlaylistToNewPlaylist(String,PlaylistEnum)
+ void addSongToPlaylistFromTemporaryPlaylist(int,int)
}

class clientSide.views.PlaylistPageShared {
+ <<Create>> PlaylistPageShared(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
}

class clientSide.views.SongPlayer {
+ <<Create>> SongPlayer(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void button1()
+ void button2()
+ void button3()
+ void button4()
+ void button5()
+ void button8()
~ void loop()
}

class clientSide.views.FriendsHomePage {
+ <<Create>> FriendsHomePage(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void button1()
+ void button2()
}


class clientSide.views.PlaylistChoseList {
+ <<Create>> PlaylistChoseList(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void validateInput()
+ void button8()
+ void button9()
}

class clientSide.views.FriendPlaylists {
+ <<Create>> FriendPlaylists(PageService,IPlaylistPlayer,ToolBoxView,int)
+ void displaySpecificContent()
+ void validateInput()
}

interface clientSide.player.playlist_player.IPlaylistPlayer {
~ void playOrPause(int)
~ void play(int,int)
~ void playback()
~ void next()
~ void previous()
~ void setShuffleMode()
~ void setRepeatMode()
~ void setSequentialMode()
~ int getCurrentPlaylistId()
~ int getCurrentSongId()
~ void stop()
~ boolean isPlaying()
~ boolean isPaused()
~ String getCurrentState()
~ void setCurrentSong(Song)
}

'interfaces !'
'--- Dépendances vers clientSide.views.InterfaceMenu ---
clientSide.views.TemplateSimplePage ..u.|> clientSide.views.InterfaceMenu

'--- Dépendances vers clientSide.views.TemplateSimplePage ---
clientSide.views.TemplateInversePage -u-|> clientSide.views.TemplateSimplePage

clientSide.views.PlaylistPageOpen -u-|> clientSide.views.TemplateSimplePage
clientSide.views.HomePage -u-|> clientSide.views.TemplateSimplePage
clientSide.views.FriendOptions -u-|> clientSide.views.TemplateSimplePage
clientSide.views.FriendsDisplayFriends -u-|> clientSide.views.TemplateSimplePage
clientSide.views.PlaylistDeletion -u-|> clientSide.views.TemplateSimplePage
clientSide.views.ActionFoundedSongs -u-|> clientSide.views.TemplateSimplePage
clientSide.views.PlaylistHomePage -u-|> clientSide.views.TemplateSimplePage
clientSide.views.FriendSearch -u-|> clientSide.views.TemplateSimplePage
clientSide.views.Login -u-|> clientSide.views.TemplateSimplePage
clientSide.views.Search -u-|> clientSide.views.TemplateSimplePage
clientSide.views.SearchGender -u-|> clientSide.views.TemplateSimplePage
clientSide.views.FriendsPlaylistPage -u-|> clientSide.views.TemplateSimplePage
clientSide.views.PlaylistPageShared -u-|> clientSide.views.TemplateSimplePage
clientSide.views.SongPlayer -u-|> clientSide.views.TemplateSimplePage
clientSide.views.FriendsHomePage -u-|> clientSide.views.TemplateSimplePage
clientSide.views.PlaylistChoseList -u-|> clientSide.views.TemplateSimplePage
clientSide.views.FriendPlaylists -u-|> clientSide.views.TemplateSimplePage

'--- Dépendances vers clientSide.views.TemplateInversePage ---
clientSide.views.PlaylistCreation -u-|> clientSide.views.TemplateInversePage
clientSide.views.CreateAccount -u-|> clientSide.views.TemplateInversePage

'Classes!'
clientSide.views.PlaylistPageOpen -u-> clientSide.services.PageService
clientSide.views.PlaylistPageOpen -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.PlaylistPageOpen -u-> clientSide.services.ToolBoxView

clientSide.views.HomePage -u-> clientSide.services.PageService
clientSide.views.HomePage -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.HomePage -u-> clientSide.services.ToolBoxView

clientSide.views.TemplateInversePage -u-> clientSide.services.PageService
clientSide.views.TemplateInversePage -u-> clientSide.player.playlist_player.IPlaylistPlayer

clientSide.views.FriendOptions -u-> clientSide.services.PageService
clientSide.views.FriendOptions -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.FriendOptions -u-> clientSide.services.ToolBoxView

clientSide.views.FriendsDisplayFriends -u-> clientSide.services.PageService
clientSide.views.FriendsDisplayFriends -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.FriendsDisplayFriends -u-> clientSide.services.ToolBoxView

clientSide.views.PlaylistCreation -u-> clientSide.services.PageService
clientSide.views.PlaylistCreation -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.PlaylistCreation -u-> clientSide.services.ToolBoxView

clientSide.views.TemplateSimplePage -u-> clientSide.services.PageService
clientSide.views.TemplateSimplePage -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.TemplateSimplePage -u-> clientSide.services.ToolBoxView

clientSide.views.CreateAccount -u-> clientSide.services.PageService
clientSide.views.CreateAccount -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.CreateAccount -u-> clientSide.services.ToolBoxView

clientSide.views.PlaylistDeletion -u-> clientSide.services.PageService
clientSide.views.PlaylistDeletion -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.PlaylistDeletion -u-> clientSide.services.ToolBoxView

clientSide.views.ActionFoundedSongs -u-> clientSide.services.PageService
clientSide.views.ActionFoundedSongs -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.ActionFoundedSongs -u-> clientSide.services.ToolBoxView

clientSide.views.PlaylistHomePage -u-> clientSide.services.PageService
clientSide.views.PlaylistHomePage -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.PlaylistHomePage -u-> clientSide.services.ToolBoxView

clientSide.views.FriendSearch -u-> clientSide.services.PageService
clientSide.views.FriendSearch -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.FriendSearch -u-> clientSide.services.ToolBoxView

clientSide.views.Login -u-> clientSide.services.PageService
clientSide.views.Login -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.Login -u-> clientSide.services.ToolBoxView

clientSide.views.Search -u-> clientSide.services.PageService
clientSide.views.Search -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.Search -u-> clientSide.services.ToolBoxView

clientSide.views.SearchGender -u-> clientSide.services.PageService
clientSide.views.SearchGender -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.SearchGender -u-> clientSide.services.ToolBoxView

clientSide.views.FriendsPlaylistPage -u-> clientSide.services.PageService
clientSide.views.FriendsPlaylistPage -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.FriendsPlaylistPage -u-> clientSide.services.ToolBoxView

clientSide.views.PlaylistPageShared -u-> clientSide.services.PageService
clientSide.views.PlaylistPageShared -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.PlaylistPageShared -u-> clientSide.services.ToolBoxView

clientSide.views.SongPlayer -u-> clientSide.services.PageService
clientSide.views.SongPlayer -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.SongPlayer -u-> clientSide.services.ToolBoxView

clientSide.views.FriendsHomePage -u-> clientSide.services.PageService
clientSide.views.FriendsHomePage -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.FriendsHomePage -u-> clientSide.services.ToolBoxView

clientSide.views.PlaylistChoseList -u-> clientSide.services.PageService
clientSide.views.PlaylistChoseList -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.PlaylistChoseList -u-> clientSide.services.ToolBoxView

clientSide.views.FriendPlaylists -u-> clientSide.services.PageService
clientSide.views.FriendPlaylists -u-> clientSide.player.playlist_player.IPlaylistPlayer
clientSide.views.FriendPlaylists -u-> clientSide.services.ToolBoxView


clientSide.services.ToolBoxView -u-> clientSide.services.PlaylistServices
clientSide.services.ToolBoxView -u-> clientSide.services.UserService
clientSide.services.ToolBoxView -u-> clientSide.services.SongService
clientSide.services.ToolBoxView -u-> clientSide.services.ArtistService
clientSide.services.ToolBoxView -u-> clientSide.services.PrintService
clientSide.services.ToolBoxView -u-> clientSide.services.SearchService
clientSide.services.ToolBoxView -u-> clientSide.services.PasswordService
clientSide.services.ToolBoxView -u-> clientSide.services.PlaylistReorderSongService
clientSide.services.ToolBoxView -u-> clientSide.services.TemporaryPlaylistService
clientSide.services.ToolBoxView -u-> common.services.UniqueIdService

clientSide.services.PlaylistPlayer -u-> clientSide.services.MenuService
clientSide.services.PrintService -u-> clientSide.services.MenuService
clientSide.services.SearchService -u-> clientSide.services.MenuService
clientSide.views.TemplateSimplePage -u-> clientSide.services.MenuService


@enduml